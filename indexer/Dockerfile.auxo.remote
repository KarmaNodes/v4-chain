# Lambda to run auxo
ARG ARCH=amd64
FROM public.ecr.aws/lambda/nodejs:16 as builder

WORKDIR /usr/app

# Copy pnpm lock and workspace and package.json from base directory
COPY ./pnpm-lock.yaml ./pnpm-workspace.yaml ./package.json ./

# Copy patches
COPY ./patches ./patches

# Copy auxo and imported packages
COPY ./packages/base/ ./packages/base/
COPY ./packages/v4-protos/ ./packages/v4-protos/
COPY ./services/auxo/ ./services/auxo/
COPY ./packages/v4-proto-parser/ ./packages/v4-proto-parser/

# Copy tsconfig in order to build typescript into javascript
COPY tsconfig.json ./

# Install pnpm
RUN if [[ "$ARM64" = arm64 ]]; then npm install -g pnpm/linux-arm64@6; else npm install -g pnpm@6; fi

# Install npm modules using pnpm
RUN pnpm install --loglevel warn --frozen-lockfile --unsafe-perm
RUN pnpm run build:prod:all

FROM public.ecr.aws/lambda/nodejs:16
WORKDIR ${LAMBDA_TASK_ROOT}
ENV NODE_ENV=production
COPY --from=builder /usr/app/ ./

CMD ["services/auxo/build/src/index.handler"]
