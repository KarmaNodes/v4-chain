syntax = "proto3";
package dydxprotocol.clob;

import "dydxprotocol/clob/matches.proto";
import "dydxprotocol/clob/order.proto";
import "dydxprotocol/clob/order_removals.proto";
import "dydxprotocol/clob/tx.proto";

option go_package = "github.com/dydxprotocol/v4-chain/protocol/x/clob/types";

// Operation represents an operation in the proposed operations. Operation is
// used internally within the memclob only.
message Operation {
  // operation represents the operation that occurred, which can be a match,
  // short term order placement, short term order cancellation, or the placement
  // of a pre-existing stateful order.
  oneof operation {
    MsgPlaceOrder order_placement = 2;
    MsgCancelOrder order_cancellation = 3;
  }
}

// InternalOperation represents an internal operation in the operations to
// propose. InternalOperation is used internally within the memclob only.
message InternalOperation {
  // operation represents the operation that occurred, which can be a match,
  // Short-Term order placement, or the placement of a pre-existing stateful
  // order.
  oneof operation {
    MsgPlaceOrder order_placement = 2;
    OrderRemoval order_removal = 4;
  }
}
